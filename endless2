

























































local Material = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()
local Settings = {}

local UI = Material.Load({
     Title = "SPTS Endless | Legend HandlesYT",
     Style = 1,
     SizeX = 370,
     SizeY = 400,
     Theme = "Mocha"
})

getgenv().cham = false
getgenv().nameESP = false
getgenv().boxESP = false


getgenv().esp_loaded = false
getgenv().Visibility = false


	
	
local main = UI.New({Title = "Main-Features"})


local SelectMob = {}
for i,v in pairs(workspace:GetChildren()) do 
    if v:IsA("Model") and not table.find(SelectMob, v.Name) then 
        table.insert(SelectMob, v.Name)
    end
end

main.Dropdown({
    Text = "Select Player To Farm",
    Options = SelectMob,
    Callback = function(v)
        Settings["ChosenMob"] = v 
    end
})

main.Toggle({
    Text = "Auto Farm Player",
    Enabled = false,
    Callback = function(v)
        Settings["Autofarm"] = v 
    end
})

main.Slider({
    Text = "Distance From Player",
    Callback = function(v)
        Settings["Distance"] = v
    end,
    Min = -20,
    Max = 20,
    Def = 5
})

main.Button({
	Text = "Remove Nametag",
		Callback = function()
		           game:GetService("RunService").RenderStepped:Connect(function()
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v.Name == "SPTS_PN_BG" then
            v:Destroy()
      
        end
    end
end)
		    end})

main.Button({
	Text = "Invisible",
		Callback = function()
local removeNametags = false -- remove custom billboardgui nametags from hrp, could trigger anticheat

local plr = game:GetService("Players").LocalPlayer
local character = plr.Character
local hrp = character.HumanoidRootPart
local old = hrp.CFrame

if not character:FindFirstChild("LowerTorso") or character.PrimaryPart ~= hrp then
return print("unsupported")
end

if removeNametags then
local tag = hrp:FindFirstChildOfClass("BillboardGui")
if tag then tag:Destroy() end

hrp.ChildAdded:Connect(function(item)
if item:IsA("BillboardGui") then
task.wait()
item:Destroy()
end
end)
end

local newroot = character.LowerTorso.Root:Clone()
hrp.Parent = workspace
character.PrimaryPart = hrp
character:MoveTo(Vector3.new(old.X,9e9,old.Z))
hrp.Parent = character
task.wait(0.5)
newroot.Parent = hrp
hrp.CFrame = old
		    
		    end})


main.Toggle({
	Text = "Auto Fist Strength",
		Callback = function(Value)
		     a = Value
        while a do task.wait()
        pcall(function()

local args = {
    [1] = {
        [1] = "Add_FS_Request"
    }
}

game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))

        end)
             end
	end,
	Enabled = false
})


main.Toggle({
	Text = "Auto Body Toughness",
		Callback = function(Value)
		     a = Value
        while a do task.wait()
        pcall(function()

local args = {
    [1] = {
        [1] = "+BT1"
    }
}

game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))

        end)
             end
	end,
	Enabled = false
})


main.Toggle({
	Text = "Auto Movement Speed",
		Callback = function(Value)
		     a = Value
        while a do task.wait()
        pcall(function()
local args = {
    [1] = {
        [1] = "Add_MS_Request"
    }
}

game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))


        end)
             end
	end,
	Enabled = false
})



main.Toggle({
	Text = "Auto Jump Force",
		Callback = function(Value)
		     a = Value
        while a do task.wait()
        pcall(function()

local args = {
    [1] = {
        [1] = "Add_JF_Request"
    }
}

game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))


        end)
             end
	end,
	Enabled = false
})


local main1 = UI.New({Title = "Player"})

 main1.Toggle({
	Text = "Infinite Jump",
	Callback = function(state)
 if state then
_G.infinjump = true
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
Mouse.KeyDown:connect(function(k)
if _G.infinjump then
if k:byte() == 32 then
Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
Humanoid:ChangeState("Jumping")
wait(0.1)
Humanoid:ChangeState("Seated")
end
end
end)
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
    else
if _G.infinjump == true then
_G.infinjump = false
else
_G.infinjump = true
end
end
            
	end,
	Enabled = false
})
	main1.Button({
	Text = "CFrame Speed (X)",
		Callback = function()
        repeat
		wait()
	until game:IsLoaded()
	local L_134_ = game:service('Players')
	local L_135_ = L_134_.LocalPlayer
	repeat
		wait()
	until L_135_.Character
	local L_136_ = game:service('UserInputService')
	local L_137_ = game:service('RunService')
	getgenv().Multiplier = 0.5
	local L_138_ = true
	local L_139_
	L_136_.InputBegan:connect(function(L_140_arg0)
		if L_140_arg0.KeyCode == Enum.KeyCode.LeftBracket then
			Multiplier = Multiplier + 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.LeftBracket) do
				wait()
				Multiplier = Multiplier + 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.RightBracket then
			Multiplier = Multiplier - 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.RightBracket) do
				wait()
				Multiplier = Multiplier - 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.X then
			L_138_ = not L_138_
			if L_138_ == true then
				repeat
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Multiplier
					game:GetService("RunService").Stepped:wait()
				until L_138_ == false
			end
		end
	end)
        end})
main1.Slider({
	Text = "CFrame Speed",
	Callback = function(s)
 
 getgenv().Multiplier = s
	end,
	Min = 0,
	Max = 5,
	Def = 0
})




main1.Button({
	Text = "Noclip",
		Callback = function()
local Noclip = nil
local Clip = nil

function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end

noclip() -- to toggle noclip() and clip()
end})



main1.Toggle({
	Text = "Free Camera",
		Callback = function(Value)
  local LocalPlayer = game:GetService("Players").LocalPlayer
		LocalPlayer.CameraMaxZoomDistance = 9e9
		LocalPlayer.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam
	end,
	Enabled = false
})



main1.Button({
	Text = "Reset",
		Callback = function()
 game.Players.LocalPlayer.Character.Humanoid.Health = 0
end})


local e = UI.New({
    Title = "Esp"
})
 e.Toggle({
	Text = "Visual",
	Callback = function(Value)
 if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().Visibility = Value
            
	end,
	Enabled = false
})


 e.Toggle({
	Text = "Box ESP",
	Callback = function(Value)
 if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().boxESP = Value
		end,
	Enabled = false
})
 

 e.Toggle({
	Text = "Name ESP",
	Callback = function(Value)
 if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().nameESP = Value
		end,
	Enabled = false
})


e.Toggle({
	Text = "Chams",
	Callback = function(Value)
   if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().cham = Value
		end,
	Enabled = false
})


-- // Credits \\ --
local cred = UI.New({
    Title = "Credits"
})

local creators = {
    "YT: Legend Handles",
}

for i,v in pairs(creators) do 
    cred.Button({
        Text = v,
        Callback = function()
            setclipboard(v) 
        end;
    });
end;

spawn(function()
    while wait() do 
        if Settings.Autofarm then 
            pcall(function()
                if game.Players.LocalPlayer.Backpack:FindFirstChild("Combat") then 
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Combat")) 
                end
                
                for i,v in pairs(workspace:GetChildren()) do
                    if v:IsA("Model") and v.Name == Settings.ChosenMob then 
                        repeat wait() 
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,0,Settings.Distance)

local args = {
    [1] = "M1"
}

game:GetService("ReplicatedStorage").Remotes.Combat:FireServer(unpack(args))

until not Settings.Autofarm or v:FindFirstChild("Humanoid").Health <= 0
                    end
                end
            end)
        end
    end
end)
